{"ts":1360025264197,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1360025271573,"patch":[[{"diffs":[[1,"var mongoose = require('mongoose');\n\n"]],"start1":0,"start2":0,"length1":0,"length2":37}]],"length":37,"saved":false}
{"ts":1360025331395,"patch":[[{"diffs":[[0,"ose');\n\n"],[1,"var mongooseRegistry = {};\n\nmongooseRegistry.schemas = [];\n"]],"start1":29,"start2":29,"length1":8,"length2":67}]],"length":96,"saved":false}
{"ts":1360025337228,"patch":[[{"diffs":[[0,"s = "],[-1,"[]"],[1,"{}"],[0,";\n"],[1,"\n"]],"start1":88,"start2":88,"length1":8,"length2":9}]],"length":97,"saved":false}
{"ts":1360025922886,"patch":[[{"diffs":[[0,"egistry."],[1,"prototype."],[0,"schemas "]],"start1":74,"start2":74,"length1":16,"length2":26},{"diffs":[[0,".schemas = {};\n\n"],[1,"mongooseRegistry.prototype.add = function(schema) {\n    if ()\n}"]],"start1":91,"start2":91,"length1":16,"length2":79}]],"length":170,"saved":false}
{"ts":1360026029121,"patch":[[{"diffs":[[0,"egistry."],[-1,"prototype."],[0,"schemas "]],"start1":74,"start2":74,"length1":26,"length2":16}]],"length":160,"saved":false}
{"ts":1360026374905,"patch":[[{"diffs":[[0,"');\n"],[-1,"\n"],[0,"var "],[-1,"mongooseRegistry = {};\n\nmongooseRegistry.schemas = {};"],[1,"_ = require('underscore');\n\nfunction MongooseRegistry() {\n    this.schemas = {};\n    \n    /** \n     * Add a new schema to the schema registry.  If a tag is re-used, the previous schema\n     * is overwritten.\n     * @param schema the schema to add.\n     * @param tag the tag for this schema (used to retrieve the schema)\n     * @return the added schema.\n     **/\n    this.add = function(schema, tag) {\n        this.schemas.tag = schema;\n    }\n}\n"],[0,"\n\nmo"]],"start1":32,"start2":32,"length1":67,"length2":456}]],"length":549,"saved":false}
{"ts":1360026433130,"patch":[[{"diffs":[[0,";\n    }\n"],[1,"    \n    this.remove = function(tag) {\n        delete this.schemas.tag;\n    }\n"],[0,"}\n\n\nmong"]],"start1":474,"start2":474,"length1":16,"length2":94}]],"length":627,"saved":false}
{"ts":1360026456191,"patch":[[{"diffs":[[0,"try() {\n    "],[-1,"this."],[1,"var "],[0,"schemas = {}"]],"start1":90,"start2":90,"length1":29,"length2":28},{"diffs":[[0,"  }\n"],[-1,"}\n\n\nmongooseRegistry.prototype.add = function(schema) {\n    if ()\n}"],[1,"    \n    this.\n}\n\n"]],"start1":555,"start2":555,"length1":71,"length2":22}]],"length":577,"saved":false}
{"ts":1360026467140,"patch":[[{"diffs":[[0,"        "],[-1,"this."],[0,"schemas."]],"start1":440,"start2":440,"length1":21,"length2":16},{"diffs":[[0," delete "],[-1,"this."],[0,"schemas."]],"start1":522,"start2":522,"length1":21,"length2":16}]],"length":567,"saved":false}
{"ts":1360026504590,"patch":[[{"diffs":[[0,"   this."],[1,"get = function(tag) {\n        return schemas['tag']\n    }"],[0,"\n}\n\n"]],"start1":555,"start2":555,"length1":12,"length2":69}]],"length":624,"saved":false}
{"ts":1360026518765,"patch":[[{"diffs":[[0," schemas"],[-1,"."],[1,"["],[0,"tag"],[1,"]"],[0," = schem"]],"start1":447,"start2":447,"length1":20,"length2":21},{"diffs":[[0,"emas"],[-1,"."],[1,"["],[0,"tag"],[1,"]"],[0,";\n  "]],"start1":534,"start2":534,"length1":12,"length2":13},{"diffs":[[0,"mas["],[-1,"'"],[0,"tag"],[-1,"'"],[0,"]\n  "]],"start1":606,"start2":606,"length1":13,"length2":11}]],"length":624,"saved":false}
{"ts":1360026534574,"patch":[[{"diffs":[[0,"s = {};\n"],[1,"    var singleton = this;\n"],[0,"    \n   "]],"start1":112,"start2":112,"length1":16,"length2":42}]],"length":650,"saved":false}
{"ts":1360026603895,"patch":[[{"diffs":[[0,"{};\n"],[1,"\n"],[0,"    "],[-1,"var singleton"],[1,"if (arguments.callee._singletonInstance) {\n        return arguments.callee._singletonInstance;\n    }\n    arguments.callee._singletonInstance"],[0," = t"]],"start1":116,"start2":116,"length1":25,"length2":153}]],"length":778,"saved":false}
{"ts":1360026618843,"patch":[[{"diffs":[[0," = {};\n\n"],[1,"    /* This class is a singleton */\n"],[0,"    if ("]],"start1":113,"start2":113,"length1":16,"length2":52}]],"length":814,"saved":false}
{"ts":1360026646678,"patch":[[{"diffs":[[0,"   }\n}\n\n"],[1,"var mongooseRegistry = new MongooseRegistry();\n"]],"start1":806,"start2":806,"length1":8,"length2":55}]],"length":861,"saved":false}
{"ts":1360026657818,"patch":[[{"diffs":[[0,"chema;\n    }"],[1,";"],[0,"\n    \n    th"]],"start1":654,"start2":654,"length1":24,"length2":25},{"diffs":[[0,"[tag];\n    }"],[1,";"],[0,"\n    \n    th"]],"start1":729,"start2":729,"length1":24,"length2":25},{"diffs":[[0,"mas[tag]"],[1,";"],[0,"\n    }"],[1,";"],[0,"\n}\n\nvar "]],"start1":798,"start2":798,"length1":22,"length2":24}]],"length":865,"saved":false}
{"contributors":[],"silentsave":false,"ts":1360026778862,"patch":[[{"diffs":[[0,"stry();\n"],[1,"\nmodule.exports = mongooseRegistry;"]],"start1":857,"start2":857,"length1":8,"length2":43}]],"length":900,"saved":false}
{"contributors":[],"silentsave":false,"ts":1360047613671,"patch":[[{"diffs":[[0,"ema, tag"],[1,", fn"],[0,") {\n    "]],"start1":618,"start2":618,"length1":16,"length2":20},{"diffs":[[0,"        "],[1,"fn("],[0,"schemas["]],"start1":634,"start2":634,"length1":16,"length2":19},{"diffs":[[0,"= schema"],[1,")"],[0,";\n    };"]],"start1":658,"start2":658,"length1":16,"length2":17},{"diffs":[[0,"e = function(tag"],[1,", fn"],[0,") {\n        dele"]],"start1":695,"start2":695,"length1":32,"length2":36},{"diffs":[[0,"        "],[1,"fn("],[0,"delete s"]],"start1":719,"start2":719,"length1":16,"length2":19},{"diffs":[[0,"ete schemas[tag]"],[1,")"],[0,";\n    };\n    \n  "]],"start1":733,"start2":733,"length1":32,"length2":33},{"diffs":[[0,"tion(tag"],[1,", fn"],[0,") {\n    "]],"start1":783,"start2":783,"length1":16,"length2":20},{"diffs":[[0,"    "],[-1,"return schemas[tag]"],[1,"fn(schemas[tag]);\n    };\n    \n    /** For testing purposes.  Will probably go away soon **/\n    this.log = function(fn) {\n        fn(schemas);\n    };\n    \n    this.getKeys = function(tag, fn) {\n        fn(_.keys(schemas))"],[0,";\n    }"],[-1,";"],[0,"\n}\n\n"]],"start1":803,"start2":803,"length1":35,"length2":236}]],"length":1121,"saved":false}
{"contributors":[],"silentsave":false,"ts":1360255506008,"patch":[[{"diffs":[[0,"se')"],[-1,";\nvar"],[1,",\n   "],[0," _ ="]],"start1":30,"start2":30,"length1":13,"length2":13},{"diffs":[[0,"rscore')"],[1,",\n    EventEmitter = require('events').EventEmitter"],[0,";\n\nfunct"]],"start1":57,"start2":57,"length1":16,"length2":67},{"diffs":[[0," this;\n    \n"],[1,"    EventEmitter.call(this);\n    \n"],[0,"    /** \n   "]],"start1":354,"start2":354,"length1":24,"length2":58},{"diffs":[[0,"Keys = function("],[-1,"tag, "],[0,"fn) {\n        fn"]],"start1":1059,"start2":1059,"length1":37,"length2":32}]],"length":1201,"saved":false}
{"ts":1360255536510,"patch":[[{"diffs":[[0,"   }\n}\n\n"],[1,"MongooseRegistry.prototype.__proto__ = EventEmitter.prototype;\n\n"],[0,"var mong"]],"start1":1111,"start2":1111,"length1":16,"length2":80}]],"length":1265,"saved":false}
{"ts":1360255562395,"patch":[[{"diffs":[[0,"e;\n\n"],[-1,"var mongooseRegistry = new MongooseRegistry();\n\n"],[0,"modu"]],"start1":1179,"start2":1179,"length1":56,"length2":8},{"diffs":[[0,"ports = "],[-1,"m"],[1,"new M"],[0,"ongooseR"]],"start1":1192,"start2":1192,"length1":17,"length2":21},{"diffs":[[0,"Registry"],[1,"()"],[0,";"]],"start1":1212,"start2":1212,"length1":9,"length2":11}]],"length":1223,"saved":false}
{"ts":1360255622800,"patch":[[{"diffs":[[0,"ema, tag, fn) {\n"],[1,"        this.trigger('add');        \n"],[0,"        fn(schem"]],"start1":703,"start2":703,"length1":32,"length2":69},{"diffs":[[0,"tion(tag, fn) {\n"],[1,"        this.trigger('remove');        \n"],[0,"        fn(delet"]],"start1":825,"start2":825,"length1":32,"length2":72}]],"length":1300,"saved":false}
{"ts":1360255640731,"patch":[[{"diffs":[[0,"tion(tag, fn) {\n"],[1,"        this.trigger('get', schemas[tag]);        \n"],[0,"        fn(schem"]],"start1":945,"start2":945,"length1":32,"length2":83}]],"length":1351,"saved":false}
{"ts":1360255652164,"patch":[[{"diffs":[[0,"'remove'"],[1,", schemas[tag]"],[0,");      "]],"start1":862,"start2":862,"length1":16,"length2":30}]],"length":1365,"saved":false}
{"ts":1360255665451,"patch":[[{"diffs":[[0,"er('add'"],[1,", tag, schema"],[0,");      "]],"start1":737,"start2":737,"length1":16,"length2":29}]],"length":1378,"saved":false}
{"ts":1360255671127,"patch":[[{"diffs":[[0,"schema);"],[-1,"        "],[0,"\n       "]],"start1":752,"start2":752,"length1":24,"length2":16}]],"length":1370,"saved":false}
{"ts":1360255687086,"patch":[[{"diffs":[[0,"tion(tag, fn) {\n"],[1,"        fn(delete schemas[tag]);\n"],[0,"        this.tri"]],"start1":830,"start2":830,"length1":32,"length2":65},{"diffs":[[0,"    "],[-1,"\n"],[0,"        "],[-1,"fn(delete schemas[tag]);"],[0,"\n   "]],"start1":928,"start2":928,"length1":41,"length2":16}]],"length":1378,"saved":false}
{"ts":1360255693125,"patch":[[{"diffs":[[0,"tion(tag, fn) {\n"],[1,"        fn(schemas[tag]);\n"],[0,"        this.tri"]],"start1":972,"start2":972,"length1":32,"length2":58},{"diffs":[[0,"   \n"],[-1,"        fn(schemas[tag]);\n"],[0,"    "]],"start1":1061,"start2":1061,"length1":34,"length2":8}]],"length":1378,"saved":false}
{"ts":1360255694999,"patch":[[{"diffs":[[0,"]);\n"],[-1,"        this.trigger('get', schemas[tag]);        \n"],[0,"    "]],"start1":1010,"start2":1010,"length1":59,"length2":8}]],"length":1327,"saved":false}
{"ts":1360255703965,"patch":[[{"diffs":[[0,"ema, tag, fn) {\n"],[1,"        fn(schemas[tag] = schema);\n"],[0,"        this.tri"]],"start1":703,"start2":703,"length1":32,"length2":67},{"diffs":[[0,"ma);"],[-1,"\n"],[0,"        "],[-1,"fn(schemas[tag] = schema);"],[0,"\n   "]],"start1":791,"start2":791,"length1":43,"length2":16}]],"length":1335,"saved":false}
{"ts":1360256095568,"patch":[[{"diffs":[[0,"   this."],[-1,"trigger"],[1,"emit"],[0,"('remove"]],"start1":892,"start2":892,"length1":23,"length2":20}]],"length":1332,"saved":false}
{"ts":1360256100654,"patch":[[{"diffs":[[0,"his."],[-1,"trigger"],[1,"emit"],[0,"('ad"]],"start1":763,"start2":763,"length1":15,"length2":12}]],"length":1329,"saved":false}
{"ts":1360256156660,"patch":[[{"diffs":[[0,"ema, tag, fn) {\n"],[1,"        if (!_.isUndefined(fn) && !_.isNull(fn)) {\n    "],[0,"        fn(schem"]],"start1":703,"start2":703,"length1":32,"length2":87},{"diffs":[[0,"schema);"],[1,"            \n        }"],[0,"\n       "]],"start1":800,"start2":800,"length1":16,"length2":38}]],"length":1406,"saved":false}
{"ts":1360256169832,"patch":[[{"diffs":[[0,"schema);"],[-1,"            "],[1,"\n        } else {\n            schemas[tag] = schema;"],[0,"\n       "]],"start1":800,"start2":800,"length1":28,"length2":68}]],"length":1446,"saved":false}
{"ts":1360256209583,"patch":[[{"diffs":[[0,"Null(fn)"],[1," && _.isFunction(fn)"],[0,") {\n    "]],"start1":758,"start2":758,"length1":16,"length2":36},{"diffs":[[0,"tion(tag, fn) {\n"],[1,"        if (!_.isUndefined(fn) && !_.isNull(fn)) {\n    "],[0,"        fn(delet"]],"start1":972,"start2":972,"length1":32,"length2":87},{"diffs":[[0,"hemas[tag]);"],[1,"            \n        }"],[0,"\n        thi"]],"start1":1063,"start2":1063,"length1":24,"length2":46}]],"length":1543,"saved":false}
{"ts":1360256241910,"patch":[[{"diffs":[[0,"_.isNull(fn)"],[1," && _.isFunction(fn)"],[0,") {\n        "]],"start1":1023,"start2":1023,"length1":24,"length2":44},{"diffs":[[0,"      \n        }"],[1," "],[0,"\n        this.em"]],"start1":1101,"start2":1101,"length1":32,"length2":33}]],"length":1564,"saved":false}
{"ts":1360256247197,"patch":[[{"diffs":[[0,"      } "],[1,"else {\n            delete schemas[tag];\n        }"],[0,"\n       "]],"start1":1110,"start2":1110,"length1":16,"length2":65}]],"length":1613,"saved":false}
{"ts":1360256302564,"patch":[[{"diffs":[[0,"tion(tag, fn) {\n"],[1,"        var deleted = schemas[tag];\n"],[0,"        if (!_.i"]],"start1":972,"start2":972,"length1":32,"length2":68}]],"length":1649,"saved":false}
{"ts":1360256308494,"patch":[[{"diffs":[[0,"e', "],[-1,"schemas[tag]);                "],[1,"deleted);"],[0,"\n   "]],"start1":1228,"start2":1228,"length1":38,"length2":17}]],"length":1628,"saved":false}
{"contributors":[],"silentsave":false,"ts":1360557974986,"patch":[[{"diffs":[[0,"};\n    \n    "],[-1,""],[0,""],[1,"/**\n     * Remove a schema from the schema registry.\n     * @param tag the tag for the schema to be removed\n     * @return true if the delete was successful, false otherwise.\n     **/\n    "],[0,"this.remove "]],"start1":942,"start2":942,"length1":24,"length2":212},{"diffs":[[0,"        "],[-1,""],[0,""],[1,"return "],[0,"delete s"]],"start1":1353,"start2":1353,"length1":16,"length2":23},{"diffs":[[0,"    "],[-1,"fn(schemas[tag]);\n    };\n    \n    /** For testing purposes.  Will probably go away soon **/\n    this.log = function(fn) {\n        fn(schemas);\n    };\n    \n    this.getKeys = function(fn) {\n        fn(_.keys(schemas)"],[1,"if (!_.isUndefined(fn) && !_.isNull(fn)) {\n            fn(schemas[tag]);\n        }\n        return schemas[tag];\n    };\n    \n    /** For testing purposes.  Will probably go away soon **/\n    this.log = function(fn) {\n        if (!_.isUndefined(fn) && !_.isNull(fn)) {\n            fn(schemas);\n        }\n        return schemas;\n    };\n    \n    this.getKeys = function(fn) {\n        console.log(\"keys = \" + JSON.stringify(_.keys(schemas)));\n        if (!_.isUndefined(fn) && !_.isNull(fn)) {\n            fn(_.keys(schemas));            \n        }\n        return _.keys(schemas"],[0,");\n "]],"start1":1488,"start2":1488,"length1":223,"length2":581}]],"length":2181,"saved":false}
{"ts":1360558508446,"patch":[[{"diffs":[[0,"ion("],[1,"tag, "],[0,"schema,"],[-1," tag,"],[0," fn)"]],"start1":696,"start2":696,"length1":20,"length2":20}]],"length":2181,"saved":false}
{"contributors":[],"silentsave":false,"ts":1360619672703,"patch":[[{"diffs":[[0,"    "],[-1,"console.log(\"keys = \" + JSON.stringify(_.keys(schemas)));"],[1,"var keys = _.keys(schemas);\n        if (!_.isArray(keys)) {\n            keys = [keys];\n        }"],[0,"\n   "]],"start1":1868,"start2":1868,"length1":65,"length2":104},{"diffs":[[0," fn("],[-1,"_."],[0,"keys"],[-1,"(schemas)"],[0,");      "],[-1," "],[-1,"     "],[0,"\n   "]],"start1":2031,"start2":2031,"length1":37,"length2":20},{"diffs":[[0," return "],[-1,"_."],[0,"keys"],[-1,"(schemas)"],[0,";\n    }\n"]],"start1":2065,"start2":2065,"length1":31,"length2":20}]],"length":2192,"saved":false}
{"contributors":[],"silentsave":false,"ts":1360716950650,"patch":[[{"diffs":[[0,"tEmitter"],[-1,";\n"],[1,",\n    Schema = mongoose.Schema;\n    "],[0,"\nfunctio"]],"start1":108,"start2":108,"length1":18,"length2":52},{"diffs":[[0,"tion(tag, fn) {\n"],[1,"        if (_.isUndefined(schemas[tag])) {\n            schemas[tag] = new Schema({});\n        }\n"],[0,"        if (!_.i"]],"start1":1502,"start2":1502,"length1":32,"length2":128}]],"length":2322,"saved":false}
{"ts":1361832757873,"patch":[[{"diffs":[[0,"hemas = "],[-1,"{}"],[1,"[]"],[0,";\n\n    /"]],"start1":193,"start2":193,"length1":18,"length2":18}]],"length":2322,"saved":false}
{"ts":1361832788399,"patch":[[{"diffs":[[0,"emas"],[-1,"[tag] = "],[1,".push("],[0,"schema)"],[1,")"],[0,";\n  "]],"start1":842,"start2":842,"length1":23,"length2":22},{"diffs":[[0,"emas"],[-1,"[tag] = "],[1,".push("],[0,"schema"],[1,")"],[0,";\n  "]],"start1":894,"start2":894,"length1":22,"length2":21}]],"length":2320,"saved":false}
{"ts":1361832804690,"patch":[[{"diffs":[[0,"s = "],[-1,"[]"],[1,"{}"],[0,";\n\n "]],"start1":197,"start2":197,"length1":10,"length2":10},{"diffs":[[0,"emas"],[-1,".push("],[1,"[tag] = "],[0,"schema)"],[-1,")"],[0,";\n  "]],"start1":842,"start2":842,"length1":22,"length2":23},{"diffs":[[0,"emas"],[-1,".push("],[1,"[tag] = "],[0,"schema"],[-1,")"],[0,";\n  "]],"start1":895,"start2":895,"length1":21,"length2":22}]],"length":2322,"saved":false}
{"ts":1361837233672,"patch":[[{"diffs":[[0,"schema);"],[-1,"        "],[0,"\n    };\n"]],"start1":955,"start2":955,"length1":24,"length2":16}]],"length":2314,"saved":false}
{"ts":1361837261476,"patch":[[{"diffs":[[0,"(this);\n    "],[1,"return (function() {"],[0,"\n    /** \n  "]],"start1":421,"start2":421,"length1":24,"length2":44},{"diffs":[[0,";\n    }\n"],[1,"    })(this);\n"],[0,"}\n\nMongo"]],"start1":2219,"start2":2219,"length1":16,"length2":30}]],"length":2348,"saved":false}
{"ts":1361837277102,"patch":[[{"diffs":[[0,"unction() {\n"],[1,"    "],[0,"    /** \n   "]],"start1":442,"start2":442,"length1":24,"length2":28},{"diffs":[[0,"   /** \n"],[1,"    "],[0,"     * A"]],"start1":459,"start2":459,"length1":16,"length2":20},{"diffs":[[0,"ma\n     "],[1,"    "],[0,"* is ove"]],"start1":558,"start2":558,"length1":16,"length2":20},{"diffs":[[0,"itten.\n     "],[1,"   "],[1," "],[0,"* @param sch"]],"start1":581,"start2":581,"length1":24,"length2":28},{"diffs":[[0,"to add.\n"],[1,"    "],[0,"     * @"]],"start1":624,"start2":624,"length1":16,"length2":20},{"diffs":[[0,"chema)\n     "],[1,"   "],[1," "],[0,"* @return th"]],"start1":701,"start2":701,"length1":24,"length2":28},{"diffs":[[0,"chema.\n     "],[1,"    "],[0,"**/\n    "],[1,"  "],[1,"  "],[0,"this.add = f"]],"start1":738,"start2":738,"length1":32,"length2":40},{"diffs":[[0,", schema, fn) {\n"],[1,"    "],[0,"        if (!_.i"]],"start1":789,"start2":789,"length1":32,"length2":36},{"diffs":[[0,") {\n            "],[1,"  "],[1,"  "],[0,"fn(schemas[tag] "]],"start1":876,"start2":876,"length1":32,"length2":36},{"diffs":[[0,"chema);\n        "],[1,"    "],[0,"} else {\n       "]],"start1":915,"start2":915,"length1":32,"length2":36},{"diffs":[[0,"e {\n            "],[1," "],[1,"   "],[0,"schemas[tag] = s"]],"start1":940,"start2":940,"length1":32,"length2":36},{"diffs":[[0,"schema;\n        "],[1,"    "],[0,"}\n        this.e"]],"start1":975,"start2":975,"length1":32,"length2":36},{"diffs":[[0,"      }\n        "],[1," "],[1,"   "],[0,"this.emit('add',"]],"start1":989,"start2":989,"length1":32,"length2":36},{"diffs":[[0,"g, schema);\n"],[1,"    "],[0,"    };\n    \n"]],"start1":1028,"start2":1028,"length1":24,"length2":28},{"diffs":[[0,"    "],[-1,"\n"],[1,"    \n  "],[0,"    "],[1,"  "],[0,"/**\n"],[1,"    "],[0,"    "]],"start1":1051,"start2":1051,"length1":17,"length2":29},{"diffs":[[0,"istry.\n     "],[1,"   "],[1," "],[0,"* @param tag"]],"start1":1118,"start2":1118,"length1":24,"length2":28},{"diffs":[[0,"removed\n"],[1,"    "],[0,"     * @"]],"start1":1176,"start2":1176,"length1":16,"length2":20},{"diffs":[[0,"rwise.\n     "],[1,"   "],[1," "],[0,"**/\n"],[1,"    "],[0,"    this.rem"]],"start1":1248,"start2":1248,"length1":28,"length2":36},{"diffs":[[0,") {\n        "],[1,"  "],[1,"  "],[0,"var deleted "]],"start1":1306,"start2":1306,"length1":24,"length2":28},{"diffs":[[0,"= schemas[tag];\n"],[1,"    "],[0,"        if (!_.i"]],"start1":1334,"start2":1334,"length1":32,"length2":36},{"diffs":[[0,"        "],[1,"  "],[1,"  "],[0,"fn(delet"]],"start1":1429,"start2":1429,"length1":16,"length2":20},{"diffs":[[0,"       \n        "],[1,"    "],[0,"} else {\n       "]],"start1":1470,"start2":1470,"length1":32,"length2":36},{"diffs":[[0,"            "],[1," "],[1,"   "],[0,"return delet"]],"start1":1499,"start2":1499,"length1":24,"length2":28},{"diffs":[[0,"e schemas[tag];\n"],[1,"    "],[0,"        }\n      "]],"start1":1527,"start2":1527,"length1":32,"length2":36},{"diffs":[[0,"      }\n        "],[1,"    "],[0,"this.emit('remov"]],"start1":1549,"start2":1549,"length1":32,"length2":36},{"diffs":[[0,"leted);\n    "],[1,"   "],[1," "],[0,"};\n    "],[1,"   "],[-1,"\n"],[1," \n   "],[0,"    "],[1," "],[0,"this.get = f"]],"start1":1591,"start2":1591,"length1":36,"length2":48},{"diffs":[[0,"tion(tag, fn) {\n"],[1,"    "],[0,"        if (_.is"]],"start1":1642,"start2":1642,"length1":32,"length2":36},{"diffs":[[0,") {\n            "],[1,"  "],[1,"  "],[0,"schemas[tag] = n"]],"start1":1701,"start2":1701,"length1":32,"length2":36},{"diffs":[[0,"});\n        "],[-1,"}\n"],[1,"    }\n  "],[0,"        "],[1,"  "],[0,"if (!_.isUnd"]],"start1":1748,"start2":1748,"length1":34,"length2":42},{"diffs":[[0,") {\n            "],[1,"    "],[0,"fn(schemas[tag])"]],"start1":1817,"start2":1817,"length1":32,"length2":36},{"diffs":[[0,"[tag]);\n        "],[1," "],[-1,"}\n"],[1,"   }\n    "],[0,"        return s"]],"start1":1847,"start2":1847,"length1":34,"length2":42},{"diffs":[[0,"s[tag];\n    "],[-1,"};\n"],[1,"    };\n    "],[0,"    \n"],[1,"    "],[0,"    /** For "]],"start1":1894,"start2":1894,"length1":32,"length2":44},{"diffs":[[0,"oon **/\n    "],[1,"   "],[1," "],[0,"this.log = f"]],"start1":1980,"start2":1980,"length1":24,"length2":28},{"diffs":[[0," function(fn) {\n"],[1,"    "],[0,"        if (!_.i"]],"start1":2006,"start2":2006,"length1":32,"length2":36},{"diffs":[[0,") {\n            "],[1,"  "],[1,"  "],[0,"fn(schemas);\n   "]],"start1":2073,"start2":2073,"length1":32,"length2":36},{"diffs":[[0,"s);\n        "],[-1,"}\n"],[1,"    }\n  "],[0,"        "],[1,"  "],[0,"return schem"]],"start1":2102,"start2":2102,"length1":34,"length2":42},{"diffs":[[0,"chemas;\n"],[1,"    "],[0,"    };\n "]],"start1":2140,"start2":2140,"length1":16,"length2":20},{"diffs":[[0,"     };\n    "],[1," "],[-1,"\n"],[1,"   \n    "],[0,"    this.get"]],"start1":2151,"start2":2151,"length1":25,"length2":33},{"diffs":[[0,") {\n        "],[1," "],[1,"   "],[0,"var keys = _"]],"start1":2202,"start2":2202,"length1":24,"length2":28},{"diffs":[[0,".keys(schemas);\n"],[1,"    "],[0,"        if (!_.i"]],"start1":2230,"start2":2230,"length1":32,"length2":36},{"diffs":[[0,"        "],[1,"    "],[0,"keys = ["]],"start1":2286,"start2":2286,"length1":16,"length2":20},{"diffs":[[0,"[keys];\n        "],[-1,"}\n"],[1,"    }\n    "],[0,"        if (!_.i"]],"start1":2305,"start2":2305,"length1":34,"length2":42},{"diffs":[[0,"        "],[1,"   "],[1," "],[0,"fn(keys)"]],"start1":2386,"start2":2386,"length1":16,"length2":20},{"diffs":[[0,"        "],[-1,"}\n"],[1,"    }\n  "],[0,"        "],[1,"  "],[0,"return k"]],"start1":2414,"start2":2414,"length1":26,"length2":34},{"diffs":[[0,"n keys;\n    "],[-1,"}"],[1,"    };"],[0,"\n    })(this"]],"start1":2445,"start2":2445,"length1":25,"length2":30}]],"length":2585,"saved":false}
{"contributors":[],"silentsave":false,"ts":1366739401977,"patch":[[{"diffs":[[0,"ngoose')"],[-1,",\n   "],[1,";\nvar"],[0," _ = req"]],"start1":26,"start2":26,"length1":21,"length2":21},{"diffs":[[0,"re')"],[-1,",\n    EventEmitter = require('events').EventEmitter,\n    Schema = mongoose.Schema;\n    "],[1,";\n"],[0,"\nfun"]],"start1":61,"start2":61,"length1":95,"length2":10},{"diffs":[[0,"   \n"],[-1,"    EventEmitter.call(this);\n    return (function() {\n    "],[0,"    "]],"start1":311,"start2":311,"length1":66,"length2":8},{"diffs":[[0,"   /** \n"],[-1,"    "],[0,"     * A"]],"start1":316,"start2":316,"length1":20,"length2":16},{"diffs":[[0,"ma\n     "],[-1,"    "],[0,"* is ove"]],"start1":411,"start2":411,"length1":20,"length2":16},{"diffs":[[0,"itten.\n     "],[-1,"  "],[-1,"  "],[0,"* @param sch"]],"start1":430,"start2":430,"length1":28,"length2":24},{"diffs":[[0,"to add.\n"],[-1,"    "],[0,"     * @"]],"start1":469,"start2":469,"length1":20,"length2":16},{"diffs":[[0,"chema)\n     "],[-1,"    "],[0,"* @return th"]],"start1":542,"start2":542,"length1":28,"length2":24},{"diffs":[[0,"chema.\n     "],[-1," "],[-1,"   "],[0,"**/\n"],[-1,"    "],[0,"    this.add"]],"start1":575,"start2":575,"length1":36,"length2":28},{"diffs":[[0,"ion("],[-1,"tag, "],[0,"schema, "],[-1,"fn) {\n            if (!_.isUndefined(fn) && !_.isNull(fn) && _.isFunction("],[1,"tag, "],[0,"fn)"],[-1,")"],[0," {\n"],[-1,"        "],[0,"    "]],"start1":611,"start2":611,"length1":110,"length2":27},{"diffs":[[0,"    "],[-1,"        } else {\n                schemas[tag] = schema;\n            }\n            this.emit('add', tag, schema);\n        };\n        \n        /**\n         * Remove a schema from the schema registry.\n         * @param tag the tag for the schema to be removed\n         * @return true if the delete was successful, false otherwise.\n         **/\n        this.remove = function(tag, fn) {\n            var deleted = schemas[tag];\n            if (!_.isUndefined(fn) && !_.isNull(fn) && _.isFunction(fn)) {\n                fn(delete schemas[tag]);            \n            } else {\n                return delete schemas[tag];\n            }\n            this.emit('remove', deleted);\n        };\n        \n        this.get = function(tag, fn) {\n            if (_.isUndefined(schemas[tag])) {\n                schemas[tag] = new Schema({});\n            }\n            if (!_.isUndefined(fn) && !_.isNull(fn)) {\n                fn(schemas[tag]);\n            }\n            return schemas[tag];\n        };\n        \n    "],[1,"};\n    \n    this.remove = function(tag, fn) {\n        fn(delete schemas[tag]);\n    };\n    \n    this.get = function(tag, fn) {\n        fn(schemas[tag]);\n    };\n    \n"],[0,"    "]],"start1":669,"start2":669,"length1":1007,"length2":172},{"diffs":[[0,"oon **/\n    "],[-1," "],[-1,"   "],[0,"this.log = f"]],"start1":891,"start2":891,"length1":28,"length2":24},{"diffs":[[0,"    "],[-1,"    if (!_.isUndefined(fn) && !_.isNull(fn)) {\n                fn(schemas);\n            }\n            return schemas;\n        };\n        \n        this.getKeys = function(fn) {\n            var keys = _.keys(schemas);\n            if (!_.isArray(keys)) {\n                keys = [keys];\n            }\n            if (!_.isUndefined(fn) && !_.isNull(fn)) {\n                fn(keys);      \n            }\n            return keys;\n        };\n    })(this);\n}\n\nMongooseRegistry.prototype.__proto__ = EventEmitter.prototype"],[1,"fn(schemas);\n    };\n    \n    this.getKeys = function(fn) {\n        fn(_.keys(schemas));\n    }\n}\n\nvar mongooseRegistry = new MongooseRegistry()"],[0,";\n\nm"]],"start1":933,"start2":933,"length1":520,"length2":150},{"diffs":[[0,"ports = "],[-1,"new M"],[1,"m"],[0,"ongooseR"]],"start1":1091,"start2":1091,"length1":21,"length2":17},{"diffs":[[0,"s = mongooseRegistry"],[-1,"()"],[0,";"]],"start1":1095,"start2":1095,"length1":23,"length2":21}]],"length":1116,"saved":false}
{"contributors":[],"silentsave":false,"ts":1366756983468,"patch":[[{"diffs":[[0,"se')"],[-1,";\nvar"],[1,",\n   "],[0," _ ="]],"start1":30,"start2":30,"length1":13,"length2":13},{"diffs":[[0,"rscore')"],[-1,";\n"],[1,",\n    EventEmitter = require('events').EventEmitter,\n    Schema = mongoose.Schema;\n    "],[0,"\nfunctio"]],"start1":57,"start2":57,"length1":18,"length2":103},{"diffs":[[0,") {\n"],[-1,"    var schemas = {};\n\n"],[1,"//"],[0,"    "]],"start1":179,"start2":179,"length1":31,"length2":10},{"diffs":[[0,"eton */\n"],[1,"//"],[0,"    if ("]],"start1":213,"start2":213,"length1":16,"length2":18},{"diffs":[[0,"Instance) {\n"],[1,"//"],[0,"        retu"]],"start1":258,"start2":258,"length1":24,"length2":26},{"diffs":[[0,"stance;\n"],[1,"//"],[0,"    }\n"],[1,"//"],[0,"    argu"]],"start1":316,"start2":316,"length1":22,"length2":26},{"diffs":[[0,"= this;\n"],[1,"//"],[0,"    \n"],[1,"    EventEmitter.call(this);\n    \n    this.schemas = {};\n    \n    return this;\n};\n\n"],[0,"    /** "]],"start1":374,"start2":374,"length1":21,"length2":106},{"diffs":[[0,"    **/\n"],[-1,"    this"],[1,"MongooseRegistry.prototype"],[0,".add = f"]],"start1":740,"start2":740,"length1":24,"length2":42},{"diffs":[[0,"ion("],[1,"tag, "],[0,"schema, "],[-1,"tag, "],[0,"fn) {\n"],[1,"        if (!_.isUndefined(fn) && !_.isNull(fn) && _.isFunction(fn)) {\n  "],[0,"        "],[1,"  "],[0,"fn("],[1,"this."],[0,"sche"]],"start1":786,"start2":786,"length1":38,"length2":118},{"diffs":[[0,"    "],[-1,"};\n    \n    this.remove = function(tag, fn) {\n"],[1,"    } else {\n            this.schemas[tag] = schema;\n        }\n        this.emit('add', tag, schema);        \n    };\n    \n    /**\n     * Remove a schema from the schema registry.\n     * @param tag the tag for the schema to be removed\n     * @return true if the delete was successful, false otherwise.\n     **/\nMongooseRegistry.prototype.remove = function(tag, fn) {\n        var deleted = this.schemas[tag];\n        if (!_.isUndefined(fn) && !_.isNull(fn) && _.isFunction(fn)) {\n    "],[0,"    "]],"start1":924,"start2":924,"length1":54,"length2":490},{"diffs":[[0,"(delete "],[1,"this."],[0,"schemas["]],"start1":1420,"start2":1420,"length1":16,"length2":21},{"diffs":[[0,"    "],[1," "],[-1,"}"],[1,"   } else {\n            return delete this.schemas[tag]"],[0,";\n    "],[1," "],[-1,"\n"],[1,"   }\n   "],[0,"    "],[1," "],[0,"this."],[-1,"get = function(tag, fn) {\n        fn(schemas[tag])"],[1,"emit('remove', deleted);\n    };\n    \nMongooseRegistry.prototype.getSchema = function(tag, fn) {\n        if (_.isUndefined(this.schemas[tag]) || _.isNull(this.schemas[tag])) {\n            this.schemas[tag] = new Schema({});\n            console.log(\"in mongooseregistry, \" + typeof(this.schemas[tag]));\n            console.log(\"in mongooseregistry, \" + JSON.stringify(Object.getPrototypeOf(this.schemas[tag])));\n        }\n        if (!_.isUndefined(fn) && !_.isNull(fn)) {\n            fn(this.schemas[tag]);\n        }\n\n        return this.schemas[tag]"],[0,";\n  "]],"start1":1448,"start2":1448,"length1":75,"length2":638},{"diffs":[[0,"oon **/\n"],[-1,"    this"],[1,"MongooseRegistry.prototype"],[0,".log = f"]],"start1":2150,"start2":2150,"length1":24,"length2":42},{"diffs":[[0,"        "],[-1,"fn("],[1,"if (!_.isUndefined(fn) && !_.isNull(fn)) {\n            fn(this."],[0,"schemas)"]],"start1":2206,"start2":2206,"length1":19,"length2":79},{"diffs":[[0,"    "],[1,"   "],[1," "],[0,"}"],[-1,";"],[0,"\n    "],[-1,"\n"],[0,"    "],[-1,"this"],[1,"return this.schemas;\n    };\n    \nMongooseRegistry.prototype"],[0,".get"]],"start1":2287,"start2":2287,"length1":24,"length2":81},{"diffs":[[0,"    "],[-1,"fn("],[1,"var keys = "],[0,"_.keys("],[1,"this."],[0,"schemas)"],[-1,")"],[0,";\n    "],[-1,"}\n}\n\nvar mongooseRegistry = new MongooseRegistry()"],[1,"    if (!_.isArray(keys)) {\n            keys = [keys];\n        }\n        if (!_.isUndefined(fn) && !_.isNull(fn)) {\n            fn(keys);      \n        }\n        return keys;\n    };    \n\nMongooseRegistry.prototype.__proto__ = EventEmitter.prototype"],[0,";\n\nm"]],"start1":2394,"start2":2394,"length1":83,"length2":293},{"diffs":[[0,"ports = "],[-1,"m"],[1,"new M"],[0,"ongooseR"]],"start1":2695,"start2":2695,"length1":17,"length2":21}]],"length":2724,"saved":false}
