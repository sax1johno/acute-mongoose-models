{
  "name": "mongoose-schema-registry",
  "description": "Creates a schema registry that can be used to store and retrieve mongoose schemas.",
  "tags": [
    "mongoose",
    "schema",
    "registry",
    "ghiraldi"
  ],
  "version": "0.0.10",
  "author": {
    "name": "John O'Connor",
    "email": "sax1johno@gmail.com"
  },
  "directories": {
    "lib": "lib"
  },
  "main": "./lib/mongoose_registry",
  "dependencies": {
    "mongoose": "*",
    "underscore": "*",
    "nodeunit": "*"
  },
  "devDependencies": {},
  "repository": {
    "type": "git",
    "url": "github.com/sax1johno/mongoose-schema-registry.git"
  },
  "_id": "mongoose-schema-registry@0.0.10",
  "_from": "mongoose-schema-registry@*",
  "readme": "mongoose-schema-registry\n========================\n\nThe Mongoose Schema Registry allows developers to register schemas without creating a mongoose model.  This allows extension of schemas later on prior to registering those models.\n\nThe following quick example should help you get started (taken from the ghiraldi framework mvc.js file):\n```javascript\n    // File1.js\n    // First, declare the registry object.\n    var registry = require('mongoose-schema-registry'),\n\n    // The registry fires events when schemas are added.\n    registry.on('add', function(tag, schema) {\n        // tag contains the name you gave the schema when you added it.\n        // schema is the actual schema added.\n    });\n    \n    // Add a schema to the registry using the add method\n    registry.add('schema_name', schema);\n```\n    \nYou can modify an existing schema by calling the getSchema method.  Since the\nregistry is a singleton, requiring will give you the same object with the already\nregistered schemas.\n```javascript\n    // File2.js\n    var registry = require('mongoose-schema-registry');\n    \n    var testSchema = registry.getSchema('testSchema');\n    // From here, you can add things to your test schema.\n    ..\n    // When you're done, just re-add the schema.  The new one will clobber \n    // the old one.\n    registry.add('testSchema', testSchema);\n```\nTo finally register the schemas into mongoose models, just iterate through the\nschemas and call the mongoose.model method.\n```javascript\n    var keys = registry.getKeys();\n    _.each(keys, function(key, index, list) {\n        var thisSchema = registry.getSchema(key);\n        mongoose.model(key,  thisSchema);\n    });\n```",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/sax1johno/mongoose-schema-registry/issues"
  },
  "homepage": "https://github.com/sax1johno/mongoose-schema-registry",
  "_shasum": "f56065760335037b9000e277b77c72f758287de1",
  "_resolved": "https://registry.npmjs.org/mongoose-schema-registry/-/mongoose-schema-registry-0.0.10.tgz"
}
